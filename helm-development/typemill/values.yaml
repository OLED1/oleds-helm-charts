# Default values for typemill.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of replicas to be deployed
replicaCount: 1

## Unofficial typemill image version based on the official typemill Dockerfile 
## ref: https://github.com/typemill/typemill
##
image:
  repository: oled01/typemill
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

## The following settings can be left default. They are only needed when you want to deploy your own image
imagePullSecrets: []
## The following setting can be left default.
nameOverride: ""
## The following setting can be left default.
fullnameOverride: ""

## You will not need a service account. So leave it empty and default as it is.
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
## className: "nginx"
  annotations: {}
## Want to setup automatic certificate provisioning? Take a look here:
## https://www.howtogeek.com/devops/how-to-install-kubernetes-cert-manager-and-configure-lets-encrypt/
##
##  annotations: 
##    {
##      cert-manager.io/cluster-issuer: "letsencrypt-prod",
##      kubernetes.io/tls-acme: "true"
##    }
  hosts:
    - host: my-typemill.example.org
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Enable if you want your data to be saved forever
persistence:
  enabled: false
  accessMode: ReadWriteOnce
  size: 1Gi

  ## nextcloud data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  #existingClaim:

## Strategy used to replace old pods
## IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  # type: Recreate

## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
startupProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1

## Custom settings and configuration for typemill itself
typemill:
  ## Hostname where your typemill instance will be available
  host: my-typemill.example.org

  ## List all plugins which should be automatically installed/updated on every deployment install/restart
  ## Please note, if you add some plugins after the first deployment, you manually need to restart your deployment
  ## How to? Just navigate to https://plugins.typemill.net/ and copy the plugin name shown on top of every tile and paste it to "plugin_names" list.
  install_plugins: 
    #When enabled, the plugins will be automatically downloaded and replaced at every pod restart
    #Note: Set to true on first deployment! Values: false (no) and true (yes)
    plugins_autoupdate: true
    #Default: https://plugins.typemill.net/download
    plugins_download_root: https://plugins.typemill.net/download
    #Default: ?plugins"
    plugins_download_subpath: "?plugins"
    plugin_names: []

  #install_plugins:
  #  plugin_names:
  #  - analytics
  #  - clipboard
  #  - contactform
  #  - ...

  install_themes:
    #When enabled, the themes will be automatically downloaded and replaced at every pod restart
    #Note: Set to true on first deployment! Values: false (no) and true (yes)
    themes_autoupdate: true
    #Default: https://themes.typemill.net/download
    themes_download_root: https://themes.typemill.net/download
    #Default: ?plugins"
    themes_download_subpath: "?themes"
    #Cyanine will be installed by default but you can state it if you want
    theme_names: []

  # If web server is not binding default port, you can define it
  # containerPort: 8080

  ## Will be injected to /var/www/html/.htaccess
  htaccess: |-
    <IfModule mod_rewrite.c>

      RewriteEngine On

      # If your homepage is http://yourdomain.com/yoursite
      # Set the RewriteBase to:
      # RewriteBase /yoursite

      # In some environements, an empty RewriteBase is required:
      # RewriteBase /

      # Use this to redirect HTTP to HTTPS on apache servers
      # RewriteCond %{HTTPS} off
      # RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

      # Use this to redirect www to non-wwww on apache servers
      # RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
      # RewriteRule ^(.*)$ http://%1/$1 [R=301,L]

      # Use this to redirect slash/ to url without slash on apache servers
      # RewriteCond %{REQUEST_FILENAME} !-d
      # RewriteRule ^(.*)/$ /$1 [R=301,L]

      # Removes index.php
      RewriteCond %{THE_REQUEST} ^GET.*index\.php [NC]
      RewriteRule (.*?)index\.php/*(.*) /$1$2 [R=301,NE,L]

      # REWRITE TO INDEX

      # If the requested path and file not /index.php
      RewriteCond %{REQUEST_URI} !^/index\.php

      # if requested doesn't match a physical file
      RewriteCond %{REQUEST_FILENAME} !-f

      # if requested doesn't match a physical folder
      RewriteCond %{REQUEST_FILENAME} !-d

      # then rewrite the request to the index.php script
      RewriteRule ^ index.php [QSA,L]


      # FILE/FOLDER PROTECTION

      # Deny access to these file types generally
      RewriteRule ^(.*)?\.yml$ - [F,L]
      Rewriterule ^(.*)?\.yaml$ - [F,L]
      RewriteRule ^(.*)?\.txt$ - [F,L]
      RewriteRule ^(.*)?\.example$ - [F,L]
      RewriteRule ^(.*)?\.git+ - [F,L]
      RewriteRule ^(.*)?\.md - [F,L]
      RewriteCond %{REQUEST_URI} !/index\.php
      RewriteRule ^(.*)?\.ph - [F,L]
      RewriteRule ^(.*)?\.twig - [F,L]
      RewriteRule ^(media\/tmp\/) - [F,L]

      # Block access to specific files in the root folder
      RewriteRule ^(composer\.lock|composer\.json|\.htaccess)$ error [F,L]

      # block files and folders starting with a dot except for the .well-known folder (Let's Encrypt)
      RewriteRule (^|/)\.(?!well-known\/) index.php [L]

      # Allow access to frontend files in author folder
      RewriteRule ^(system\/author\/css\/) - [L]
      RewriteRule ^(system\/author\/img\/) - [L]
      RewriteRule ^(system\/author\/js\/) - [L]

      # redirect all other direct requests to the following physical folders to the index.php so pages with same name work
      RewriteRule ^(system|content|data|settings|(media\/files\/)) index.php [QSA,L]

      # disallow browsing other folders generally
      Options -Indexes

    </IfModule>

